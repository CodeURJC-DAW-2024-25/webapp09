openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8443
  description: Generated server url
paths:
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    put:
      tags:
      - user-rest-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisteredUserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/reviews/{id}:
    get:
      tags:
      - review-rest-controller
      operationId: getReviewById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
    put:
      tags:
      - review-rest-controller
      operationId: updateReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
    delete:
      tags:
      - review-rest-controller
      operationId: deleteReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/reservations/{id}:
    get:
      tags:
      - reservation-rest-controller
      operationId: getReservationById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservationDTO"
    put:
      tags:
      - reservation-rest-controller
      operationId: updateReservation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservationDTO"
    delete:
      tags:
      - reservation-rest-controller
      operationId: deleteUser_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/houses/{id}:
    get:
      tags:
      - housing-rest-controller
      operationId: getHouseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HousingDTO"
    put:
      tags:
      - housing-rest-controller
      operationId: updateHouse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HousingDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HousingDTO"
    delete:
      tags:
      - housing-rest-controller
      operationId: deleteHouse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /roomHouses:
    post:
      tags:
      - custom-ajax-controller
      operationId: getHouses
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: integer
                format: int32
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageHousing"
  /loadComments:
    post:
      tags:
      - custom-ajax-controller
      operationId: getComments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: integer
                format: int32
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageReview"
  /api/users:
    get:
      tags:
      - user-rest-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDTO"
    post:
      tags:
      - user-rest-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisteredUserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/reviews:
    get:
      tags:
      - review-rest-controller
      operationId: getAllReviews
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReviewDTO"
    post:
      tags:
      - review-rest-controller
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
  /api/reservations:
    get:
      tags:
      - reservation-rest-controller
      operationId: getAllReservations
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReservationDTO"
    post:
      tags:
      - reservation-rest-controller
      operationId: createReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservationDTO"
  /api/login:
    post:
      tags:
      - authentication-rest-controller
      operationId: createAuthenticationToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/houses:
    get:
      tags:
      - housing-rest-controller
      operationId: getAllhouses
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HousingDTO"
    post:
      tags:
      - housing-rest-controller
      operationId: createHouse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HousingDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HousingDTO"
  /adminHouses:
    post:
      tags:
      - custom-ajax-controller
      operationId: getAdminHouses
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: integer
                format: int32
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageHousing"
  /acceptReservation/{reservationId}:
    post:
      tags:
      - custom-ajax-controller
      operationId: acceptReservation
      parameters:
      - name: reservationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /acceptHouse/{houseId}:
    post:
      tags:
      - custom-ajax-controller
      operationId: acceptHouse
      parameters:
      - name: houseId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/houses/{id}/tags:
    get:
      tags:
      - housing-rest-controller
      operationId: getTagsById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TagDTO"
                uniqueItems: true
  /denyReservation/{reservationId}:
    delete:
      tags:
      - custom-ajax-controller
      operationId: denyReservation
      parameters:
      - name: reservationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /denyHouse/{houseId}:
    delete:
      tags:
      - custom-ajax-controller
      operationId: denyHouse
      parameters:
      - name: houseId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
components:
  schemas:
    RegisteredUserDTO:
      type: object
      properties:
        dni:
          type: string
        name:
          type: string
        number:
          type: integer
          format: int32
        password:
          type: string
        email:
          type: string
        admin:
          type: boolean
        roles:
          type: array
          items:
            type: string
    UserDTO:
      type: object
      properties:
        dni:
          type: string
        name:
          type: string
        number:
          type: integer
          format: int32
        email:
          type: string
        admin:
          type: boolean
        roles:
          type: array
          items:
            type: string
    ReviewDTO:
      type: object
      properties:
        reviewId:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        comment:
          type: string
        hotelCode:
          type: integer
          format: int32
        userDni:
          type: string
    ReservationDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        checkIn:
          type: string
          format: date-time
        checkOut:
          type: string
          format: date-time
        valorated:
          type: boolean
        clientDni:
          type: string
        housingCode:
          type: integer
          format: int32
        housingName:
          type: string
    HousingDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        location:
          type: string
        name:
          type: string
        imageBase64:
          type: string
        price:
          type: integer
          format: int32
        description:
          type: string
        stars:
          type: integer
          format: int32
        acepted:
          type: boolean
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
          uniqueItems: true
    Tag:
      type: object
      properties:
        id:
          type: string
    Housing:
      type: object
      properties:
        code:
          type: integer
          format: int32
        location:
          type: string
        name:
          type: string
        price:
          type: integer
          format: int32
        description:
          type: string
        stars:
          type: integer
          format: int32
        acepted:
          type: boolean
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
          uniqueItems: true
        imageBase64:
          type: string
    PageHousing:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/Housing"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PageReview:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/Review"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    Review:
      type: object
      properties:
        reviewId:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        comment:
          type: string
        hotel:
          $ref: "#/components/schemas/Housing"
        user:
          $ref: "#/components/schemas/User"
    User:
      type: object
      properties:
        dni:
          type: string
        name:
          type: string
        number:
          type: integer
          format: int32
        password:
          type: string
        email:
          type: string
        admin:
          type: boolean
        roles:
          type: array
          items:
            type: string
        encodedPassword:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    TagDTO:
      type: object
      properties:
        id:
          type: string
